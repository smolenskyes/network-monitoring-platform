worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server auth-service:8000;
        keepalive 32;
    }

    upstream discovery_service {
        server discovery-service:8001;
        keepalive 32;
    }

    upstream monitoring_service {
        server monitoring-service:8002;
        keepalive 32;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;

    server {
        listen 80;
        server_name localhost;

        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Auth service routes
        location ~ ^/api/auth/(.*)$ {
            limit_req zone=auth burst=20 nodelay;
            proxy_pass http://auth_service/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Discovery service routes
        location ~ ^/api/discovery/(.*)$ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://discovery_service/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Monitoring service routes
        location ~ ^/api/monitoring/(.*)$ {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://monitoring_service/$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle unmatched API routes explicitly
        location ^~ /api/ {
            return 404;
        }

        # Frontend
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
